# Wrapping
addhl global/ wrap

# Line numbers
addhl global/ number-lines -relative -hlcursor -separator ' '

# Scroll off at 3 lines
set-option global scrolloff 3,0

# Indenting
set global indentwidth 4
set global tabstop 4
hook global WinSetOption filetype=(python) %{
    map global insert <tab> '    '
}

# Increment and decrement
define-command -hidden -params 2 inc %{ try %{
    evaluate-commands %sh{
        if [ "$1" = 0 ]
        then
            count=1
        else
            count="$1"
        fi
        printf '%s%s' 'exec h"_/\d<ret><a-i>na' "$2($count)<esc>|( cat\; echo )|bc<ret>"
    }
} catch %{
    execute-keys l
}}
map global normal <c-a> ': inc %val{count} +<ret>'
map global normal <c-x> ': inc %val{count} -<ret>'

# Change color scheme
colorscheme gruvbox-dark

# Add a indicator for column 80
add-highlighter global/ column '%sh{echo $(($kak_opt_autowrap_column + 1))}' +r@Whitespace

# Search word
define-command -hidden -docstring \
"select a word under cursor, or add cursor on next occurrence of current selection" \
select-or-add-cursor %{
    try %{
        execute-keys "<a-k>\A.\z<ret>"
        execute-keys -save-regs '' "_<a-i>w*"
    } catch %{
        execute-keys -save-regs '' "_*<s-n>"
    } catch nop
}

map global normal '^' ': select-or-add-cursor<ret>' -docstring "add cursor\
on current word, and jump to the next match"

# Comment lines with #
map global normal '#' ': comment-line<ret>'

# Remove the assistant
set -add global ui_options terminal_assistant=none

# Disable the mouse
set -add global ui_options terminal_enable_mouse=0

# Language server protocol
eval %sh{kak-lsp --kakoune -s $kak_session}
lsp-enable
lsp-auto-hover-disable

hook global WinSetOption filetype=(latex) %{
    map global user z ':texlab-forward-search<ret>' -docstring 'goto zathura'
}

map global user l %{:enter-user-mode lsp<ret>} -docstring "LSP mode"
map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
map global object a '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object <a-a> '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object e '<a-semicolon>lsp-object Function Method<ret>' -docstring 'LSP function or method'
map global object k '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring 'LSP class interface or struct'
map global object d '<a-semicolon>lsp-diagnostic-object --include-warnings<ret>' -docstring 'LSP errors and warnings'
map global object D '<a-semicolon>lsp-diagnostic-object<ret>' -docstring 'LSP errors'
map global goto s '<esc>:lsp-document-symbol<ret>' -docstring 'all document symbols'

           
map global user f '<a-i>p|fmt<ret>' -docstring 'fmt paragraph'
